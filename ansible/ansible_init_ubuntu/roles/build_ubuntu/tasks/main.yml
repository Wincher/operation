---
# tasks file for build_ubuntu
- name: install lsb-core
  apt:
    pkg: lsb-core
    state: present
    update_cache: true
  become: yes

- name: get lsb_release
  raw: lsb_release -a | awk '{print $2}' | tail -n 1
  register: codename

- name: show codename
  debug:
    msg: "{{ codename }}"

- name: judge is_apt_sources.list.bakexist
  shell: ls /etc/apt/sources.list.bak
  ignore_errors: true
  register: is_apt_sources_list_bak_exist

- name: backup sources.list
  copy:
    src: /etc/apt/sources.list
    dest: /etc/apt/sources.list.bak
    remote_src: yes
  become: yes
  when: is_apt_sources_list_bak_exist is failed

- name: cp sources.list
  template:
    src: sources.list.j2
    dest: /etc/apt/sources.list
  become: yes
  when: is_apt_sources_list_bak_exist is failed

# - name: apt update
#   apt:
#     update_cache: yes
#   become: yes

- name: init components
  apt:
    pkg: '{{ init_apt_components }}'
    state: present
    update_cache: false
  become: yes

- name: judge is_oh_my_zsh_exist exist
  shell: ls ~/.oh-my-zsh
  ignore_errors: true
  register: is_oh_my_zsh_exist

- name: install oh_my_zsh
  shell: 'sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)'
  ignore_errors: true
  when: is_oh_my_zsh_exist is failed 

- name: add docker's official GPG key
  shell: "{{ item }}"
  with_items: 
    - 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg --yes'
    - 'echo \
  "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null'
  become: yes

- name: install docker components
  apt:
    pkg: '{{ docker_components }}'
    state: present
    update_cache: true
  become: yes